        Endpoints-
            - GET /users - Get a list of users
            - GET /users/{username} - Get a user with particular id
            - POST /users - Create a user
            - PUT /users/{username} - Update a user with a particular id
            - DELETE /users/{username} - Delete a user with a particular id
        Implementation Details-
            - Username should be used as {id}
            - Username should not contain anything but english alphabets and digits
            - Username should be case insensitive (make all lowercase)
            - While getting a user , password shouldn’t be in the response (Introducing DTO concept)
            - If no user is found is should return correct status code and message
            - Always hash user’s password
        Example User Model:
        {
            Id : 1, 
            Username: turja
            Email: simanta.deb@cefalo.com
            Password: 123456
            CreatedAt: 12-12-12
            UpdatedAt: 12-12-12
        }


// username must be unique